package com.muhrifqii.core.compose.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

/**
 * color from material theme builder
 */
private object Colors {

    val primaryLight = Color(0xFF36693E)
    val onPrimaryLight = Color(0xFFFFFFFF)
    val primaryContainerLight = Color(0xFFB7F1B9)
    val onPrimaryContainerLight = Color(0xFF002108)
    val secondaryLight = Color(0xFF516351)
    val onSecondaryLight = Color(0xFFFFFFFF)
    val secondaryContainerLight = Color(0xFFD4E8D1)
    val onSecondaryContainerLight = Color(0xFF0F1F11)
    val tertiaryLight = Color(0xFF39656C)
    val onTertiaryLight = Color(0xFFFFFFFF)
    val tertiaryContainerLight = Color(0xFFBDEAF3)
    val onTertiaryContainerLight = Color(0xFF001F24)
    val errorLight = Color(0xFFBA1A1A)
    val onErrorLight = Color(0xFFFFFFFF)
    val errorContainerLight = Color(0xFFFFDAD6)
    val onErrorContainerLight = Color(0xFF410002)
    val backgroundLight = Color(0xFFF7FBF2)
    val onBackgroundLight = Color(0xFF181D18)
    val surfaceLight = Color(0xFFF7FBF2)
    val onSurfaceLight = Color(0xFF181D18)
    val surfaceVariantLight = Color(0xFFDDE5D9)
    val onSurfaceVariantLight = Color(0xFF424940)
    val outlineLight = Color(0xFF727970)
    val outlineVariantLight = Color(0xFFC1C9BE)
    val scrimLight = Color(0xFF000000)
    val inverseSurfaceLight = Color(0xFF2D322C)
    val inverseOnSurfaceLight = Color(0xFFEEF2E9)
    val inversePrimaryLight = Color(0xFF9CD49F)
    val surfaceDimLight = Color(0xFFD7DBD3)
    val surfaceBrightLight = Color(0xFFF7FBF2)
    val surfaceContainerLowestLight = Color(0xFFFFFFFF)
    val surfaceContainerLowLight = Color(0xFFF1F5EC)
    val surfaceContainerLight = Color(0xFFEBEFE7)
    val surfaceContainerHighLight = Color(0xFFE5E9E1)
    val surfaceContainerHighestLight = Color(0xFFE0E4DB)

    val primaryLightMediumContrast = Color(0xFF194C24)
    val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
    val primaryContainerLightMediumContrast = Color(0xFF4C8052)
    val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
    val secondaryLightMediumContrast = Color(0xFF364736)
    val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
    val secondaryContainerLightMediumContrast = Color(0xFF677966)
    val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
    val tertiaryLightMediumContrast = Color(0xFF1A4950)
    val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
    val tertiaryContainerLightMediumContrast = Color(0xFF507B83)
    val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
    val errorLightMediumContrast = Color(0xFF8C0009)
    val onErrorLightMediumContrast = Color(0xFFFFFFFF)
    val errorContainerLightMediumContrast = Color(0xFFDA342E)
    val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
    val backgroundLightMediumContrast = Color(0xFFF7FBF2)
    val onBackgroundLightMediumContrast = Color(0xFF181D18)
    val surfaceLightMediumContrast = Color(0xFFF7FBF2)
    val onSurfaceLightMediumContrast = Color(0xFF181D18)
    val surfaceVariantLightMediumContrast = Color(0xFFDDE5D9)
    val onSurfaceVariantLightMediumContrast = Color(0xFF3E453D)
    val outlineLightMediumContrast = Color(0xFF5A6158)
    val outlineVariantLightMediumContrast = Color(0xFF757D73)
    val scrimLightMediumContrast = Color(0xFF000000)
    val inverseSurfaceLightMediumContrast = Color(0xFF2D322C)
    val inverseOnSurfaceLightMediumContrast = Color(0xFFEEF2E9)
    val inversePrimaryLightMediumContrast = Color(0xFF9CD49F)
    val surfaceDimLightMediumContrast = Color(0xFFD7DBD3)
    val surfaceBrightLightMediumContrast = Color(0xFFF7FBF2)
    val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
    val surfaceContainerLowLightMediumContrast = Color(0xFFF1F5EC)
    val surfaceContainerLightMediumContrast = Color(0xFFEBEFE7)
    val surfaceContainerHighLightMediumContrast = Color(0xFFE5E9E1)
    val surfaceContainerHighestLightMediumContrast = Color(0xFFE0E4DB)

    val primaryLightHighContrast = Color(0xFF00290C)
    val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
    val primaryContainerLightHighContrast = Color(0xFF194C24)
    val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
    val secondaryLightHighContrast = Color(0xFF162617)
    val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
    val secondaryContainerLightHighContrast = Color(0xFF364736)
    val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
    val tertiaryLightHighContrast = Color(0xFF00272C)
    val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
    val tertiaryContainerLightHighContrast = Color(0xFF1A4950)
    val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
    val errorLightHighContrast = Color(0xFF4E0002)
    val onErrorLightHighContrast = Color(0xFFFFFFFF)
    val errorContainerLightHighContrast = Color(0xFF8C0009)
    val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
    val backgroundLightHighContrast = Color(0xFFF7FBF2)
    val onBackgroundLightHighContrast = Color(0xFF181D18)
    val surfaceLightHighContrast = Color(0xFFF7FBF2)
    val onSurfaceLightHighContrast = Color(0xFF000000)
    val surfaceVariantLightHighContrast = Color(0xFFDDE5D9)
    val onSurfaceVariantLightHighContrast = Color(0xFF1F261E)
    val outlineLightHighContrast = Color(0xFF3E453D)
    val outlineVariantLightHighContrast = Color(0xFF3E453D)
    val scrimLightHighContrast = Color(0xFF000000)
    val inverseSurfaceLightHighContrast = Color(0xFF2D322C)
    val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
    val inversePrimaryLightHighContrast = Color(0xFFC1FAC2)
    val surfaceDimLightHighContrast = Color(0xFFD7DBD3)
    val surfaceBrightLightHighContrast = Color(0xFFF7FBF2)
    val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
    val surfaceContainerLowLightHighContrast = Color(0xFFF1F5EC)
    val surfaceContainerLightHighContrast = Color(0xFFEBEFE7)
    val surfaceContainerHighLightHighContrast = Color(0xFFE5E9E1)
    val surfaceContainerHighestLightHighContrast = Color(0xFFE0E4DB)

    val primaryDark = Color(0xFF9CD49F)
    val onPrimaryDark = Color(0xFF003913)
    val primaryContainerDark = Color(0xFF1D5128)
    val onPrimaryContainerDark = Color(0xFFB7F1B9)
    val secondaryDark = Color(0xFFB8CCB5)
    val onSecondaryDark = Color(0xFF243425)
    val secondaryContainerDark = Color(0xFF3A4B3A)
    val onSecondaryContainerDark = Color(0xFFD4E8D1)
    val tertiaryDark = Color(0xFFA1CED6)
    val onTertiaryDark = Color(0xFF00363D)
    val tertiaryContainerDark = Color(0xFF1F4D54)
    val onTertiaryContainerDark = Color(0xFFBDEAF3)
    val errorDark = Color(0xFFFFB4AB)
    val onErrorDark = Color(0xFF690005)
    val errorContainerDark = Color(0xFF93000A)
    val onErrorContainerDark = Color(0xFFFFDAD6)
    val backgroundDark = Color(0xFF101510)
    val onBackgroundDark = Color(0xFFE0E4DB)
    val surfaceDark = Color(0xFF101510)
    val onSurfaceDark = Color(0xFFE0E4DB)
    val surfaceVariantDark = Color(0xFF424940)
    val onSurfaceVariantDark = Color(0xFFC1C9BE)
    val outlineDark = Color(0xFF8B9389)
    val outlineVariantDark = Color(0xFF424940)
    val scrimDark = Color(0xFF000000)
    val inverseSurfaceDark = Color(0xFFE0E4DB)
    val inverseOnSurfaceDark = Color(0xFF2D322C)
    val inversePrimaryDark = Color(0xFF36693E)
    val surfaceDimDark = Color(0xFF101510)
    val surfaceBrightDark = Color(0xFF363A35)
    val surfaceContainerLowestDark = Color(0xFF0B0F0B)
    val surfaceContainerLowDark = Color(0xFF181D18)
    val surfaceContainerDark = Color(0xFF1C211C)
    val surfaceContainerHighDark = Color(0xFF272B26)
    val surfaceContainerHighestDark = Color(0xFF313630)

    val primaryDarkMediumContrast = Color(0xFFA0D8A3)
    val onPrimaryDarkMediumContrast = Color(0xFF001B06)
    val primaryContainerDarkMediumContrast = Color(0xFF689D6C)
    val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
    val secondaryDarkMediumContrast = Color(0xFFBCD0BA)
    val onSecondaryDarkMediumContrast = Color(0xFF0A1A0C)
    val secondaryContainerDarkMediumContrast = Color(0xFF839681)
    val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
    val tertiaryDarkMediumContrast = Color(0xFFA5D2DB)
    val onTertiaryDarkMediumContrast = Color(0xFF001A1E)
    val tertiaryContainerDarkMediumContrast = Color(0xFF6C98A0)
    val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
    val errorDarkMediumContrast = Color(0xFFFFBAB1)
    val onErrorDarkMediumContrast = Color(0xFF370001)
    val errorContainerDarkMediumContrast = Color(0xFFFF5449)
    val onErrorContainerDarkMediumContrast = Color(0xFF000000)
    val backgroundDarkMediumContrast = Color(0xFF101510)
    val onBackgroundDarkMediumContrast = Color(0xFFE0E4DB)
    val surfaceDarkMediumContrast = Color(0xFF101510)
    val onSurfaceDarkMediumContrast = Color(0xFFF8FCF3)
    val surfaceVariantDarkMediumContrast = Color(0xFF424940)
    val onSurfaceVariantDarkMediumContrast = Color(0xFFC6CDC2)
    val outlineDarkMediumContrast = Color(0xFF9EA59B)
    val outlineVariantDarkMediumContrast = Color(0xFF7E857C)
    val scrimDarkMediumContrast = Color(0xFF000000)
    val inverseSurfaceDarkMediumContrast = Color(0xFFE0E4DB)
    val inverseOnSurfaceDarkMediumContrast = Color(0xFF272B26)
    val inversePrimaryDarkMediumContrast = Color(0xFF1E5229)
    val surfaceDimDarkMediumContrast = Color(0xFF101510)
    val surfaceBrightDarkMediumContrast = Color(0xFF363A35)
    val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0F0B)
    val surfaceContainerLowDarkMediumContrast = Color(0xFF181D18)
    val surfaceContainerDarkMediumContrast = Color(0xFF1C211C)
    val surfaceContainerHighDarkMediumContrast = Color(0xFF272B26)
    val surfaceContainerHighestDarkMediumContrast = Color(0xFF313630)

    val primaryDarkHighContrast = Color(0xFFF0FFEC)
    val onPrimaryDarkHighContrast = Color(0xFF000000)
    val primaryContainerDarkHighContrast = Color(0xFFA0D8A3)
    val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
    val secondaryDarkHighContrast = Color(0xFFF0FFEC)
    val onSecondaryDarkHighContrast = Color(0xFF000000)
    val secondaryContainerDarkHighContrast = Color(0xFFBCD0BA)
    val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
    val tertiaryDarkHighContrast = Color(0xFFF1FDFF)
    val onTertiaryDarkHighContrast = Color(0xFF000000)
    val tertiaryContainerDarkHighContrast = Color(0xFFA5D2DB)
    val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
    val errorDarkHighContrast = Color(0xFFFFF9F9)
    val onErrorDarkHighContrast = Color(0xFF000000)
    val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
    val onErrorContainerDarkHighContrast = Color(0xFF000000)
    val backgroundDarkHighContrast = Color(0xFF101510)
    val onBackgroundDarkHighContrast = Color(0xFFE0E4DB)
    val surfaceDarkHighContrast = Color(0xFF101510)
    val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
    val surfaceVariantDarkHighContrast = Color(0xFF424940)
    val onSurfaceVariantDarkHighContrast = Color(0xFFF6FDF1)
    val outlineDarkHighContrast = Color(0xFFC6CDC2)
    val outlineVariantDarkHighContrast = Color(0xFFC6CDC2)
    val scrimDarkHighContrast = Color(0xFF000000)
    val inverseSurfaceDarkHighContrast = Color(0xFFE0E4DB)
    val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
    val inversePrimaryDarkHighContrast = Color(0xFF003210)
    val surfaceDimDarkHighContrast = Color(0xFF101510)
    val surfaceBrightDarkHighContrast = Color(0xFF363A35)
    val surfaceContainerLowestDarkHighContrast = Color(0xFF0B0F0B)
    val surfaceContainerLowDarkHighContrast = Color(0xFF181D18)
    val surfaceContainerDarkHighContrast = Color(0xFF1C211C)
    val surfaceContainerHighDarkHighContrast = Color(0xFF272B26)
    val surfaceContainerHighestDarkHighContrast = Color(0xFF313630)
}

val AppLightColorScheme = lightColorScheme(
    primary = Colors.primaryLight,
    onPrimary = Colors.onPrimaryLight,
    primaryContainer = Colors.primaryContainerLight,
    onPrimaryContainer = Colors.onPrimaryContainerLight,
    secondary = Colors.secondaryLight,
    onSecondary = Colors.onSecondaryLight,
    secondaryContainer = Colors.secondaryContainerLight,
    onSecondaryContainer = Colors.onSecondaryContainerLight,
    tertiary = Colors.tertiaryLight,
    onTertiary = Colors.onTertiaryLight,
    tertiaryContainer = Colors.tertiaryContainerLight,
    onTertiaryContainer = Colors.onTertiaryContainerLight,
    error = Colors.errorLight,
    onError = Colors.onErrorLight,
    errorContainer = Colors.errorContainerLight,
    onErrorContainer = Colors.onErrorContainerLight,
    background = Colors.backgroundLight,
    onBackground = Colors.onBackgroundLight,
    surface = Colors.surfaceLight,
    onSurface = Colors.onSurfaceLight,
    surfaceVariant = Colors.surfaceVariantLight,
    onSurfaceVariant = Colors.onSurfaceVariantLight,
    outline = Colors.outlineLight,
    outlineVariant = Colors.outlineVariantLight,
    scrim = Colors.scrimLight,
    inverseSurface = Colors.inverseSurfaceLight,
    inverseOnSurface = Colors.inverseOnSurfaceLight,
    inversePrimary = Colors.inversePrimaryLight,
    surfaceDim = Colors.surfaceDimLight,
    surfaceBright = Colors.surfaceBrightLight,
    surfaceContainerLowest = Colors.surfaceContainerLowestLight,
    surfaceContainerLow = Colors.surfaceContainerLowLight,
    surfaceContainer = Colors.surfaceContainerLight,
    surfaceContainerHigh = Colors.surfaceContainerHighLight,
    surfaceContainerHighest = Colors.surfaceContainerHighestLight,)

val AppDarkColorScheme = darkColorScheme(
    primary = Colors.primaryDark,
    onPrimary = Colors.onPrimaryDark,
    primaryContainer = Colors.primaryContainerDark,
    onPrimaryContainer = Colors.onPrimaryContainerDark,
    secondary = Colors.secondaryDark,
    onSecondary = Colors.onSecondaryDark,
    secondaryContainer = Colors.secondaryContainerDark,
    onSecondaryContainer = Colors.onSecondaryContainerDark,
    tertiary = Colors.tertiaryDark,
    onTertiary = Colors.onTertiaryDark,
    tertiaryContainer = Colors.tertiaryContainerDark,
    onTertiaryContainer = Colors.onTertiaryContainerDark,
    error = Colors.errorDark,
    onError = Colors.onErrorDark,
    errorContainer = Colors.errorContainerDark,
    onErrorContainer = Colors.onErrorContainerDark,
    background = Colors.backgroundDark,
    onBackground = Colors.onBackgroundDark,
    surface = Colors.surfaceDark,
    onSurface = Colors.onSurfaceDark,
    surfaceVariant = Colors.surfaceVariantDark,
    onSurfaceVariant = Colors.onSurfaceVariantDark,
    outline = Colors.outlineDark,
    outlineVariant = Colors.outlineVariantDark,
    scrim = Colors.scrimDark,
    inverseSurface = Colors.inverseSurfaceDark,
    inverseOnSurface = Colors.inverseOnSurfaceDark,
    inversePrimary = Colors.inversePrimaryDark,
    surfaceDim = Colors.surfaceDimDark,
    surfaceBright = Colors.surfaceBrightDark,
    surfaceContainerLowest = Colors.surfaceContainerLowestDark,
    surfaceContainerLow = Colors.surfaceContainerLowDark,
    surfaceContainer = Colors.surfaceContainerDark,
    surfaceContainerHigh = Colors.surfaceContainerHighDark,
    surfaceContainerHighest = Colors.surfaceContainerHighestDark,
)

val AppMediumContrastLightColorScheme = lightColorScheme(
    primary = Colors.primaryLightMediumContrast,
    onPrimary = Colors.onPrimaryLightMediumContrast,
    primaryContainer = Colors.primaryContainerLightMediumContrast,
    onPrimaryContainer = Colors.onPrimaryContainerLightMediumContrast,
    secondary = Colors.secondaryLightMediumContrast,
    onSecondary = Colors.onSecondaryLightMediumContrast,
    secondaryContainer = Colors.secondaryContainerLightMediumContrast,
    onSecondaryContainer = Colors.onSecondaryContainerLightMediumContrast,
    tertiary = Colors.tertiaryLightMediumContrast,
    onTertiary = Colors.onTertiaryLightMediumContrast,
    tertiaryContainer = Colors.tertiaryContainerLightMediumContrast,
    onTertiaryContainer = Colors.onTertiaryContainerLightMediumContrast,
    error = Colors.errorLightMediumContrast,
    onError = Colors.onErrorLightMediumContrast,
    errorContainer = Colors.errorContainerLightMediumContrast,
    onErrorContainer = Colors.onErrorContainerLightMediumContrast,
    background = Colors.backgroundLightMediumContrast,
    onBackground = Colors.onBackgroundLightMediumContrast,
    surface = Colors.surfaceLightMediumContrast,
    onSurface = Colors.onSurfaceLightMediumContrast,
    surfaceVariant = Colors.surfaceVariantLightMediumContrast,
    onSurfaceVariant = Colors.onSurfaceVariantLightMediumContrast,
    outline = Colors.outlineLightMediumContrast,
    outlineVariant = Colors.outlineVariantLightMediumContrast,
    scrim = Colors.scrimLightMediumContrast,
    inverseSurface = Colors.inverseSurfaceLightMediumContrast,
    inverseOnSurface = Colors.inverseOnSurfaceLightMediumContrast,
    inversePrimary = Colors.inversePrimaryLightMediumContrast,
    surfaceDim = Colors.surfaceDimLightMediumContrast,
    surfaceBright = Colors.surfaceBrightLightMediumContrast,
    surfaceContainerLowest = Colors.surfaceContainerLowestLightMediumContrast,
    surfaceContainerLow = Colors.surfaceContainerLowLightMediumContrast,
    surfaceContainer = Colors.surfaceContainerLightMediumContrast,
    surfaceContainerHigh = Colors.surfaceContainerHighLightMediumContrast,
    surfaceContainerHighest = Colors.surfaceContainerHighestLightMediumContrast,
)

val AppHighContrastLightColorScheme = lightColorScheme(
    primary = Colors.primaryLightHighContrast,
    onPrimary = Colors.onPrimaryLightHighContrast,
    primaryContainer = Colors.primaryContainerLightHighContrast,
    onPrimaryContainer = Colors.onPrimaryContainerLightHighContrast,
    secondary = Colors.secondaryLightHighContrast,
    onSecondary = Colors.onSecondaryLightHighContrast,
    secondaryContainer = Colors.secondaryContainerLightHighContrast,
    onSecondaryContainer = Colors.onSecondaryContainerLightHighContrast,
    tertiary = Colors.tertiaryLightHighContrast,
    onTertiary = Colors.onTertiaryLightHighContrast,
    tertiaryContainer = Colors.tertiaryContainerLightHighContrast,
    onTertiaryContainer = Colors.onTertiaryContainerLightHighContrast,
    error = Colors.errorLightHighContrast,
    onError = Colors.onErrorLightHighContrast,
    errorContainer = Colors.errorContainerLightHighContrast,
    onErrorContainer = Colors.onErrorContainerLightHighContrast,
    background = Colors.backgroundLightHighContrast,
    onBackground = Colors.onBackgroundLightHighContrast,
    surface = Colors.surfaceLightHighContrast,
    onSurface = Colors.onSurfaceLightHighContrast,
    surfaceVariant = Colors.surfaceVariantLightHighContrast,
    onSurfaceVariant = Colors.onSurfaceVariantLightHighContrast,
    outline = Colors.outlineLightHighContrast,
    outlineVariant = Colors.outlineVariantLightHighContrast,
    scrim = Colors.scrimLightHighContrast,
    inverseSurface = Colors.inverseSurfaceLightHighContrast,
    inverseOnSurface = Colors.inverseOnSurfaceLightHighContrast,
    inversePrimary = Colors.inversePrimaryLightHighContrast,
    surfaceDim = Colors.surfaceDimLightHighContrast,
    surfaceBright = Colors.surfaceBrightLightHighContrast,
    surfaceContainerLowest = Colors.surfaceContainerLowestLightHighContrast,
    surfaceContainerLow = Colors.surfaceContainerLowLightHighContrast,
    surfaceContainer = Colors.surfaceContainerLightHighContrast,
    surfaceContainerHigh = Colors.surfaceContainerHighLightHighContrast,
    surfaceContainerHighest = Colors.surfaceContainerHighestLightHighContrast,
)

val AppMediumContrastDarkColorScheme = darkColorScheme(
    primary = Colors.primaryDarkMediumContrast,
    onPrimary = Colors.onPrimaryDarkMediumContrast,
    primaryContainer = Colors.primaryContainerDarkMediumContrast,
    onPrimaryContainer = Colors.onPrimaryContainerDarkMediumContrast,
    secondary = Colors.secondaryDarkMediumContrast,
    onSecondary = Colors.onSecondaryDarkMediumContrast,
    secondaryContainer = Colors.secondaryContainerDarkMediumContrast,
    onSecondaryContainer = Colors.onSecondaryContainerDarkMediumContrast,
    tertiary = Colors.tertiaryDarkMediumContrast,
    onTertiary = Colors.onTertiaryDarkMediumContrast,
    tertiaryContainer = Colors.tertiaryContainerDarkMediumContrast,
    onTertiaryContainer = Colors.onTertiaryContainerDarkMediumContrast,
    error = Colors.errorDarkMediumContrast,
    onError = Colors.onErrorDarkMediumContrast,
    errorContainer = Colors.errorContainerDarkMediumContrast,
    onErrorContainer = Colors.onErrorContainerDarkMediumContrast,
    background = Colors.backgroundDarkMediumContrast,
    onBackground = Colors.onBackgroundDarkMediumContrast,
    surface = Colors.surfaceDarkMediumContrast,
    onSurface = Colors.onSurfaceDarkMediumContrast,
    surfaceVariant = Colors.surfaceVariantDarkMediumContrast,
    onSurfaceVariant = Colors.onSurfaceVariantDarkMediumContrast,
    outline = Colors.outlineDarkMediumContrast,
    outlineVariant = Colors.outlineVariantDarkMediumContrast,
    scrim = Colors.scrimDarkMediumContrast,
    inverseSurface = Colors.inverseSurfaceDarkMediumContrast,
    inverseOnSurface = Colors.inverseOnSurfaceDarkMediumContrast,
    inversePrimary = Colors.inversePrimaryDarkMediumContrast,
    surfaceDim = Colors.surfaceDimDarkMediumContrast,
    surfaceBright = Colors.surfaceBrightDarkMediumContrast,
    surfaceContainerLowest = Colors.surfaceContainerLowestDarkMediumContrast,
    surfaceContainerLow = Colors.surfaceContainerLowDarkMediumContrast,
    surfaceContainer = Colors.surfaceContainerDarkMediumContrast,
    surfaceContainerHigh = Colors.surfaceContainerHighDarkMediumContrast,
    surfaceContainerHighest = Colors.surfaceContainerHighestDarkMediumContrast,
)

val AppHighContrastDarkColorScheme = darkColorScheme(
    primary = Colors.primaryDarkHighContrast,
    onPrimary = Colors.onPrimaryDarkHighContrast,
    primaryContainer = Colors.primaryContainerDarkHighContrast,
    onPrimaryContainer = Colors.onPrimaryContainerDarkHighContrast,
    secondary = Colors.secondaryDarkHighContrast,
    onSecondary = Colors.onSecondaryDarkHighContrast,
    secondaryContainer = Colors.secondaryContainerDarkHighContrast,
    onSecondaryContainer = Colors.onSecondaryContainerDarkHighContrast,
    tertiary = Colors.tertiaryDarkHighContrast,
    onTertiary = Colors.onTertiaryDarkHighContrast,
    tertiaryContainer = Colors.tertiaryContainerDarkHighContrast,
    onTertiaryContainer = Colors.onTertiaryContainerDarkHighContrast,
    error = Colors.errorDarkHighContrast,
    onError = Colors.onErrorDarkHighContrast,
    errorContainer = Colors.errorContainerDarkHighContrast,
    onErrorContainer = Colors.onErrorContainerDarkHighContrast,
    background = Colors.backgroundDarkHighContrast,
    onBackground = Colors.onBackgroundDarkHighContrast,
    surface = Colors.surfaceDarkHighContrast,
    onSurface = Colors.onSurfaceDarkHighContrast,
    surfaceVariant = Colors.surfaceVariantDarkHighContrast,
    onSurfaceVariant = Colors.onSurfaceVariantDarkHighContrast,
    outline = Colors.outlineDarkHighContrast,
    outlineVariant = Colors.outlineVariantDarkHighContrast,
    scrim = Colors.scrimDarkHighContrast,
    inverseSurface = Colors.inverseSurfaceDarkHighContrast,
    inverseOnSurface = Colors.inverseOnSurfaceDarkHighContrast,
    inversePrimary = Colors.inversePrimaryDarkHighContrast,
    surfaceDim = Colors.surfaceDimDarkHighContrast,
    surfaceBright = Colors.surfaceBrightDarkHighContrast,
    surfaceContainerLowest = Colors.surfaceContainerLowestDarkHighContrast,
    surfaceContainerLow = Colors.surfaceContainerLowDarkHighContrast,
    surfaceContainer = Colors.surfaceContainerDarkHighContrast,
    surfaceContainerHigh = Colors.surfaceContainerHighDarkHighContrast,
    surfaceContainerHighest = Colors.surfaceContainerHighestDarkHighContrast,
)
