[versions]
agp = "8.7.2"
androidxlifecycle = "2.6.2"
androidxactivity = "1.9.3"
chucker = "4.0.0"
circuit = "0.25.0"
compose-multiplatform = "1.7.0"
compose-ui = "1.7.5"
coroutines = "1.9.0"
kotlin = "2.0.21"
kotlininject = "0.7.2"
ksp = "2.0.21-1.0.27"
lyricist = "1.7.0"
multiplatformsettings = "1.2.0"
okhttp = "4.12.0"
kermit = "1.2.3" # Pinned back as Store uses Kermit 1.x
ktlint = "1.0.1"
ktor = "2.3.12"
paging = "3.3.4"
spotless = "6.25.0"
sqldelight = "2.0.2"
nsException = "0.1.10"
crashkios = "0.9.0"
buildlogic = "1.0.0-SNAPSHOT"
runner = "1.0.2"
espressoCore = "3.0.2"
appcompatV7 = "28.0.0"

[libraries]
androidx-activity-activity = { module = "androidx.activity:activity", version.ref = "androidxactivity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxactivity" }
androidx-browser = "androidx.browser:browser:1.8.0"
androidx-collection = "androidx.collection:collection:1.4.5"
androidx-core = "androidx.core:core-ktx:1.15.0"
androidx-splashscreen = "androidx.core:core-splashscreen:1.0.1"
androidx-preference = "androidx.preference:preference-ktx:1.2.1"
androidx-composePreview = {module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui"}
androidx-composePreview-android = {module = "androidx.compose.ui:ui-tooling-preview-android", version.ref = "compose-ui"}
androidx-composePreview-desktop = {module = "androidx.compose.ui:ui-tooling-preview-desktop", version.ref = "compose-ui"}
compose-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose-multiplatform" }

paging-common = { module = "androidx.paging:paging-common", version.ref = "paging" }

androidx-profileinstaller = "androidx.profileinstaller:profileinstaller:1.4.1"

junit = "junit:junit:4.13.2"
androidx-test-core = "androidx.test:core-ktx:1.6.1"
androidx-test-junit = "androidx.test.ext:junit-ktx:1.2.1"
androidx-test-rules = "androidx.test:rules:1.6.1"
androidx-benchmark-macro = "androidx.benchmark:benchmark-macro-junit4:1.3.3"
androidx-uiautomator = "androidx.test.uiautomator:uiautomator:2.3.0"

androidx-work-runtime = "androidx.work:work-runtime-ktx:2.10.0"

kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu:0.26.0"
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.6.1"
kotlinx-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3"
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-coroutines-playservices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }

circuit-foundation = { module = "com.slack.circuit:circuit-foundation", version.ref = "circuit" }
circuit-gestureNavigation = { module = "com.slack.circuit:circuitx-gesture-navigation", version.ref = "circuit" }
circuit-overlay = { module = "com.slack.circuit:circuit-overlay", version.ref = "circuit" }
circuit-retained = { module = "com.slack.circuit:circuit-retained", version.ref = "circuit" }
circuit-runtime = { module = "com.slack.circuit:circuit-runtime", version.ref = "circuit" }

appauth = "net.openid:appauth:0.11.1"

chucker-library = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }

compose-material3-windowsizeclass = "dev.chrisbanes.material3:material3-window-size-class-multiplatform:0.5.0"

google-firebase-bom = "com.google.firebase:firebase-bom:33.6.0"
google-firebase-storage = { module = "com.google.firebase:firebase-storage-ktx", version = "" }
google-firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx", version = "" }
google-firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx", version = "" }
google-firebase-perf = { module = "com.google.firebase:firebase-perf-ktx", version = "" }
google-firebase-auth = { module = "com.google.firebase:firebase-auth-ktx", version = "" }

imageloader = "io.github.qdsfdhvh:image-loader:1.6.8"

kermit-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
timber = "com.jakewharton.timber:timber:5.0.1"
napier = "io.github.aakira:napier:2.6.1"

nsException-crashlytics = { module = "com.rickclephas.kmp:nsexception-kt-crashlytics", version.ref = "nsException" }
nsException-sentry = { module = "com.rickclephas.kmp:nsexception-kt-sentry", version.ref = "nsException" }
crashkios-crashlytics = { module = "co.touchlab.crashkios:crashlytics", version.ref = "crashkios" }

kotlininject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlininject" }
kotlininject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlininject" }

leakCanary = "com.squareup.leakcanary:leakcanary-android:2.14"

lyricist-core = { module = "cafe.adriel.lyricist:lyricist-core", version.ref = "lyricist" }
lyricist-library = { module = "cafe.adriel.lyricist:lyricist", version.ref = "lyricist" }

multiplatformsettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformsettings" }
multiplatformsettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformsettings" }

okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

playservices-blockstore = "com.google.android.gms:play-services-auth-blockstore:16.4.0"

sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-paging = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }

assertk = "com.willowtreeapps.assertk:assertk:0.28.1"
turbine = "app.cash.turbine:turbine:1.2.0"

uuid = "com.benasher44:uuid:0.8.4"

android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
spotless-gradlePlugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
compose-gradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
runner = { group = "com.android.support.test", name = "runner", version.ref = "runner" }
espresso-core = { group = "com.android.support.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
appcompat-v7 = { group = "com.android.support", name = "appcompat-v7", version.ref = "appcompatV7" }
composeCompiler-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
#licensee-gradlePlugin = { module = "app.cash.licensee:licensee-gradle-plugin", version.ref = "licensee" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
android-lint = { id = "com.android.lint", version.ref = "agp" }
android-test = { id = "com.android.test", version.ref = "agp" }
buildConfig = "com.github.gmazzo.buildconfig:5.5.0"
cacheFixPlugin = { id = "org.gradle.android.cache-fix", version = "3.0.1" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
gms-googleServices = "com.google.gms.google-services:4.4.2"
firebase-crashlytics = "com.google.firebase.crashlytics:3.0.2"
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
muhrifqii-buildLogic-kotlin-multiplatform = { id = "com.muhrifqii.kotlin.multiplatform", version.ref = "buildlogic" }
muhrifqii-buildLogic-kotlin-android = { id = "com.muhrifqii.kotlin.android", version.ref = "buildlogic" }
muhrifqii-buildLogic-android-app = { id = "com.muhrifqii.android.application", version.ref = "buildlogic" }
muhrifqii-buildLogic-android-lib = { id = "com.muhrifqii.android.library", version.ref = "buildlogic" }
muhrifqii-buildLogic-android-test = { id = "com.muhrifqii.android.test", version.ref = "buildlogic" }
muhrifqii-buildLogic-compose = { id = "com.muhrifqii.compose", version.ref = "buildlogic" }

[bundles]

